<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<!-- 自动扫描@Controller注入为bean -->
	<context:component-scan base-package="com.trm" />
	<context:annotation-config />
	<aop:aspectj-autoproxy />

	<!-- 加载配置文件 -->
	<!-- <context:property-placeholder location="classpath:config/config.properties" /> -->
	<!-- 加载加密配置文件 -->
	<bean id="propertyConfigurer" class="com.trm.util.encrypt.EncryptPropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/config.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 全文检索 -->
	<bean id="jestService" class="com.trm.service.jest.JestService">
        <property name="jestUrl" value="http://192.168.1.117"/>
        <property name="jestProt" value="19200"/>
        <property name="connTimeout" value="1500"/>
        <property name="readTimeout" value="3000"/>
        <property name="dateFormat" value="yyyy-MM-dd'T'hh:mm:ss"/>
    </bean>

	<!-- 以下为SpringMVC配置 -->
	<mvc:annotation-driven>
		<!-- 返回json数据，@response使用 -->
		<mvc:message-converters register-defaults="true">
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>

			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/" />
			<bean class="com.trm.authentication.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors> 



	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="-1" />
	</bean>

	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到XXX页面 -->
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">index.jsp</prop>
			</props>
		</property>
	</bean>

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!--*************************************读取文件start ************************************** -->

	<util:properties id="filePath" location="classpath:config/config.properties" />
	<util:properties id="mail" location="classpath:config/mail.properties" />

	<!--**************************************读取文件end ************************************** -->
	
	<import resource="classpath:spring/spring-hibernate.xml" />
	<import resource="classpath:spring/spring-security.xml" />
	<import resource="classpath:spring/spring-trmserver.xml" />
</beans>